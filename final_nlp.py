# -*- coding: utf-8 -*-
"""final-nlp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VCNaXvqUkY027Yvba0AC8_MqxsZuiFOP
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Verisetlerini yükleme
train_df = pd.read_csv('./offenseval-tr-training-v1.tsv', sep='\t')
test_df = pd.read_csv('./offenseval-tr-testset-v1.tsv', sep='\t')
label_df = pd.read_csv('./offenseval-tr-labela-v1.tsv', sep='\t', header=None, names=['id'])

# Altın standart veri setini düzeltme
split_data = label_df['id'].str.split(',', expand=True)
split_data.columns = ['id', 'subtask_a']

# 'id' sütununu integer'a dönüştürme
split_data['id'] = split_data['id'].astype(int)

# Test seti ve altın standart veri setini birleştirme
test_df = test_df.merge(split_data, on='id')

# Eğitim ve test verisini ayırma
X_train = train_df['tweet']
y_train = train_df['subtask_a']
X_test = test_df['tweet']
y_test = test_df['subtask_a']

# Metin verilerini TF-IDF ile dönüştürme
vectorizer = TfidfVectorizer(max_features=5000)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Random Forest modeli ile eğitme
clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train_tfidf, y_train)

# Tahmin yapma
y_pred = clf.predict(X_test_tfidf)

# Modeli değerlendirme
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Doğruluk Oranı: {accuracy}")
print(f"Sınıflandırma Raporu:\n{report}")


import matplotlib.pyplot as plt

# Veri
labels = ['Ofansif', 'Ofansif Olmayan']
sizes = [len(test_df[test_df['subtask_a'] == 'OFF']), len(test_df[test_df['subtask_a'] == 'NOT'])]
colors = ['#ff9999','#66b3ff']

# Pasta grafiği oluşturma
plt.figure(figsize=(8, 6))
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title('Ofansif ve Ofansif Olmayan Tweet Oransal Dağılımı')
plt.axis('equal')  # Daire şeklinde göster
plt.savefig('./pie_chart.png')  # Çıktıyı dosyaya kaydet
plt.show()